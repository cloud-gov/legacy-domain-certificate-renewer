FROM python:3.8-slim as base

# When building locally, these should be set to your UID/GID.  That way, any
# files written to the $PWD mount will be owned by you.  This is not
# necessary (or wanted) when building in Concourse.
ARG UID=2000
ARG GID=2000
ARG USER=app

# In case the host user's GID is already in the base image.
RUN grep -q ":$GID:" /etc/group \
 || groupadd --gid="$GID" "$USER"

RUN useradd \
      --home-dir="/home/$USER" \
      --no-log-init \
      --create-home \
      --shell=/bin/bash \
      --gid=$GID \
      --uid=$UID \
      --no-user-group \
      --non-unique \
      "$USER"

RUN apt update \
 && apt -y upgrade \
 && apt install -y --no-install-recommends \
      build-essential \
      libpq-dev \
      curl \
      gnupg2 \
      procps \
      git

# Install Fake Pebble LE server
COPY --from=letsencrypt/pebble /usr/bin/pebble /usr/bin/pebble
COPY --from=letsencrypt/pebble /test/ /test/
COPY --from=letsencrypt/pebble-challtestsrv /usr/bin/pebble-challtestsrv /usr/bin/pebble-challtestsrv

RUN cp /test/certs/pebble.minica.pem /usr/local/share/ca-certificates/pebble.crt \
 && update-ca-certificates

# Install Postgresql
ENV PG_MAJOR=11
RUN curl -sSL https://www.postgresql.org/media/keys/ACCC4CF8.asc \
    | apt-key add - \
 && echo "deb http://apt.postgresql.org/pub/repos/apt/ bullseye"-pgdg main\
    > /etc/apt/sources.list.d/pgdg.list \
 && apt update \
 && apt install -y --no-install-recommends "postgresql-$PG_MAJOR" 

ENV PGDATA /tmp/data
ENV PGCONFIG /tmp/data/postgresql.conf
ENV PATH $PATH:/usr/lib/postgresql/$PG_MAJOR/bin

RUN mkdir -p "$PGDATA" \
 && chown -R "$USER:" "$PGDATA" \
 && chmod 700 "$PGDATA"

ENV POSTGRES_HOST_AUTH_METHOD=trust

# Install local python packages
RUN pip install --upgrade pip
COPY pip-tools/dev-requirements.txt ./pip-tools/
RUN pip install -r pip-tools/dev-requirements.txt

WORKDIR /app
RUN chown "$UID:$GID" .
USER $UID:$GID

RUN initdb \
  && echo "unix_socket_directories = '$PGDATA'" >> "$PGCONFIG" \
  && echo "log_statement = 'all'" >> "$PGCONFIG" \
  && echo "log_connections = on" >> "$PGCONFIG" \
  && echo "log_disconnections = on" >> "$PGCONFIG" \
  && echo "log_line_prefix = ''" >> "$PGCONFIG" \
  && sed -ri "s!^#?(listen_addresses)\s*=\s*\S+.*!\1 = '*'!" "$PGCONFIG" \
  && grep -F "listen_addresses = '*'" "$PGCONFIG" \
  && echo 'CREATE DATABASE "local-development-cdn"' | postgres --single -D "$PGDATA" postgres \
  && echo 'CREATE DATABASE "local-development-domain"' | postgres --single -D "$PGDATA" postgres

COPY . .


ENV PATH=/usr/local/bin:$PATH
ENV ENV=local
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt

ENTRYPOINT ["bash", "-c"]
CMD ["bash"]
